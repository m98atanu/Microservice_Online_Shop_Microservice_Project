package com.microservices.inventory.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.microservices.inventory.external.APIEndpoints.ProductEntity;
import com.microservices.inventory.external.APIEndpoints.ProductServiceEndpoints;
import com.microservices.inventory.model.InventoryEntity;
import com.microservices.inventory.repository.InventoryRepository;

@Service
public class InventoryService {
	@Autowired
	InventoryRepository inventoryRepo;
	
	@Autowired
	ProductServiceEndpoints productServiceEndpoints;
	
	public int addInventory(InventoryEntity inventory) throws Exception{
		Optional<ProductEntity> productInDbWithSameProductId = 
				Optional.of(productServiceEndpoints.fetchProductById(inventory.getInventoryId()).getBody());
		Optional<InventoryEntity> InventoryInDbWithSameProductName =
				inventoryRepo.findByProductId(inventory.getProductId());
		if(productInDbWithSameProductId.isPresent() && InventoryInDbWithSameProductName.isEmpty()) {
			return inventoryRepo.save(inventory).getInventoryId();
		}
		else throw new Exception("Invalid ProductId");
	}
	
	public InventoryEntity fetchInventoryById(int inventoryId) throws Exception{
		Optional<InventoryEntity> inventoryInDb = inventoryRepo.findById(inventoryId);
		if(inventoryInDb.isPresent()) {
			return inventoryInDb.get();
		}
		else throw new Exception("Invalid inventoryId");
	}
}

























